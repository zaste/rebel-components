{
  "quality_standards": {
    "version": "10.2",
    "last_updated": "2025-06-17",
    "description": "Comprehensive quality validation rules for Rebel components",
    
    "critical_requirements": {
      "single_file": {
        "rule": "Component must be a single HTML file with one root data-cs element",
        "validation": "componentTags.length === 1",
        "severity": "critical",
        "category": "structure",
        "fix_guidance": "Combine all component code into a single HTML file with one root element"
      },
      
      "data_cs_present": {
        "rule": "Component must have data-cs attribute with component name",
        "validation": "/data-cs=\"[^\"]+\"/.test(code)",
        "severity": "critical",
        "category": "structure",
        "fix_guidance": "Add data-cs=\"component-name\" to the root element"
      },
      
      "scoped_styles": {
        "rule": "All CSS must be scoped with [data-cs=\"component-name\"] selector",
        "validation": "/\\[data-cs=\"[^\"]+\"\\]/.test(code) || !/<style/.test(code)",
        "severity": "critical",
        "category": "styles",
        "fix_guidance": "Prefix all CSS rules with [data-cs=\"component-name\"]"
      },
      
      "semantic_html": {
        "rule": "Interactive components must use semantic HTML elements",
        "validation": "hasInteractivity ? /<(header|main|nav|section|article|aside|footer)/.test(code) : true",
        "severity": "critical",
        "category": "accessibility",
        "fix_guidance": "Use semantic HTML5 elements like <main>, <nav>, <section>, etc."
      },
      
      "aria_compliance": {
        "rule": "Interactive components must include appropriate ARIA attributes",
        "validation": "hasInteractivity ? /aria-\\w+|role=/.test(code) : true",
        "severity": "critical",
        "category": "accessibility",
        "fix_guidance": "Add ARIA labels, roles, and properties for screen reader support"
      },
      
      "focus_management": {
        "rule": "Interactive components must include focus management",
        "validation": "hasInteractivity ? /:focus-visible|focus\\(\\)/.test(code) : true",
        "severity": "critical",
        "category": "accessibility",
        "fix_guidance": "Include focus styles and programmatic focus management"
      },
      
      "keyboard_navigation": {
        "rule": "Components with click handlers must support keyboard navigation",
        "validation": "hasClickHandlers ? /addEventListener.*keydown|addEventListener.*keypress/.test(code) : true",
        "severity": "critical",
        "category": "accessibility",
        "fix_guidance": "Add keyboard event listeners for Enter, Space, and arrow keys"
      },
      
      "no_localstorage_artifacts": {
        "rule": "Cannot use localStorage/sessionStorage in Claude artifacts",
        "validation": "!/localStorage|sessionStorage/.test(code)",
        "severity": "critical",
        "category": "compatibility",
        "fix_guidance": "Use React state or in-memory storage instead"
      },
      
      "webflow_compatibility": {
        "rule": "Cannot use <template> tags in Webflow",
        "validation": "!/<template/.test(code)",
        "severity": "critical",
        "category": "webflow",
        "fix_guidance": "Use hidden divs instead of <template> elements"
      },
      
      "mutation_observer": {
        "rule": "Must include MutationObserver for dynamic content initialization",
        "validation": "/initComponents|MutationObserver/.test(code)",
        "severity": "critical",
        "category": "functionality",
        "fix_guidance": "Add MutationObserver to handle dynamically added components"
      }
    },
    
    "performance_requirements": {
      "size_budget": {
        "rule": "Component must not exceed size budget for its capability level",
        "thresholds": {
          "static": "1kb",
          "interactive": "5kb",
          "stateful": "8kb",
          "connected": "12kb",
          "synchronized": "15kb"
        },
        "validation": "sizeKB <= budgetForLevel",
        "severity": "high",
        "category": "performance",
        "fix_guidance": "Optimize code, remove unnecessary features, or justify higher capability level"
      },
      
      "debounced_inputs": {
        "rule": "Search inputs must be debounced to prevent API spam",
        "validation": "hasSearchInput ? /debounce/.test(code) : true",
        "severity": "high",
        "category": "performance",
        "fix_guidance": "Add debouncing to search input handlers (300ms default)"
      },
      
      "passive_listeners": {
        "rule": "Scroll event listeners must be passive for performance",
        "validation": "hasScrollListeners ? /passive.*true/.test(code) : true",
        "severity": "high",
        "category": "performance",
        "fix_guidance": "Add {passive: true} option to scroll event listeners"
      },
      
      "cleanup_listeners": {
        "rule": "Event listeners must be cleaned up in destroy() method",
        "validation": "hasListeners ? /removeEventListener|destroy/.test(code) : true",
        "severity": "high",
        "category": "performance",
        "fix_guidance": "Add destroy() method that removes all event listeners"
      },
      
      "raf_animations": {
        "rule": "Complex animations should use requestAnimationFrame",
        "validation": "hasAnimations ? /requestAnimationFrame/.test(code) : true",
        "severity": "medium",
        "category": "performance",
        "fix_guidance": "Use requestAnimationFrame for smooth, performant animations"
      }
    },
    
    "accessibility_requirements": {
      "touch_targets": {
        "rule": "Touch targets must be at least 44px for accessibility",
        "validation": "hasButtons ? !/min-height:\\s*[1-3]\\d+px|min-width:\\s*[1-3]\\d+px/.test(code) : true",
        "severity": "high",
        "category": "accessibility",
        "fix_guidance": "Ensure interactive elements have minimum 44px touch targets"
      },
      
      "color_contrast": {
        "rule": "Check color contrast ratios meet WCAG AA standards",
        "validation": "checkContrastRatios(code)",
        "severity": "medium",
        "category": "accessibility",
        "fix_guidance": "Ensure 4.5:1 contrast ratio for normal text, 3:1 for large text"
      },
      
      "reduced_motion": {
        "rule": "Must respect user motion preferences",
        "validation": "hasAnimations ? /prefers-reduced-motion/.test(code) : true",
        "severity": "high",
        "category": "accessibility",
        "fix_guidance": "Add @media (prefers-reduced-motion: reduce) styles"
      },
      
      "screen_reader_support": {
        "rule": "Interactive components should include screen reader support",
        "validation": "hasInteractivity ? /sr-only|aria-live|role=[\"']status[\"']/.test(code) : true",
        "severity": "medium",
        "category": "accessibility",
        "fix_guidance": "Add screen reader announcements and status updates"
      },
      
      "label_association": {
        "rule": "Form inputs must have proper label association",
        "validation": "hasInputs ? /aria-label|aria-labelledby|<label/.test(code) : true",
        "severity": "critical",
        "category": "accessibility",
        "fix_guidance": "Associate labels with inputs using for/id or aria-labelledby"
      }
    },
    
    "webflow_requirements": {
      "single_embed": {
        "rule": "Must be single embed (one script tag maximum)",
        "validation": "scriptTags.length <= 1",
        "severity": "critical",
        "category": "webflow",
        "fix_guidance": "Combine all JavaScript into a single script block"
      },
      
      "webflow_push": {
        "rule": "Must use window.Webflow?.push() for initialization",
        "validation": "/window\\.Webflow\\?\\.push/.test(code)",
        "severity": "high",
        "category": "webflow",
        "fix_guidance": "Add window.Webflow?.push(initComponents) for proper timing"
      },
      
      "no_external_deps": {
        "rule": "External dependencies must be from cdnjs.cloudflare.com",
        "validation": "hasExternalScripts ? /cdnjs\\.cloudflare\\.com/.test(code) : true",
        "severity": "high",
        "category": "webflow",
        "fix_guidance": "Use only CDN links from cdnjs.cloudflare.com for external libraries"
      },
      
      "collection_ready": {
        "rule": "Components in collections must handle dynamic items",
        "validation": "inCollection ? /MutationObserver.*w-dyn-item/.test(code) : true",
        "severity": "medium",
        "category": "webflow",
        "fix_guidance": "Add MutationObserver to handle Webflow collection list items"
      }
    },
    
    "anti_patterns": {
      "composition": {
        "nested_same_type": {
          "pattern": "/<div[^>]*data-cs=\"(\\w+)\"[^>]*>.*<div[^>]*data-cs=\"\\1\"/gs",
          "message": "Cannot nest components of the same type",
          "severity": "critical",
          "fix_guidance": "Use different component types or refactor architecture"
        },
        
        "nested_forms": {
          "pattern": "/<form[^>]*>.*<form/gs",
          "message": "Cannot nest forms - use fieldsets for grouping",
          "severity": "critical",
          "fix_guidance": "Use fieldsets and legends instead of nested forms"
        },
        
        "multiple_focus_traps": {
          "pattern": "/focusTrap.*true.*focusTrap.*true/gs",
          "message": "Cannot have multiple active focus traps",
          "severity": "critical",
          "fix_guidance": "Ensure only one focus trap is active at a time"
        }
      },
      
      "performance": {
        "sync_dom_loops": {
          "pattern": "/for\\s*\\([^)]*\\)\\s*\\{[^}]*document\\.createElement/gs",
          "message": "Avoid synchronous DOM manipulation in loops",
          "severity": "high",
          "fix_guidance": "Use DocumentFragment or batch DOM operations"
        },
        
        "missing_debounce": {
          "pattern": "/<input[^>]*type=[\"']search[\"'][^>]*>(?!.*debounce)/gs",
          "message": "Search inputs should be debounced",
          "severity": "high",
          "fix_guidance": "Add debouncing to search input handlers"
        },
        
        "global_listeners_no_cleanup": {
          "pattern": "/document\\.addEventListener(?!.*removeEventListener)/gs",
          "message": "Global event listeners must be cleaned up",
          "severity": "high",
          "fix_guidance": "Add cleanup in destroy() method"
        }
      },
      
      "accessibility": {
        "click_without_keyboard": {
          "pattern": "/addEventListener.*click(?!.*keydown|.*keypress)/gs",
          "message": "Click handlers must have keyboard equivalents",
          "severity": "critical",
          "fix_guidance": "Add keydown/keypress handlers for Enter and Space keys"
        },
        
        "missing_labels": {
          "pattern": "/<input(?![^>]*aria-label)(?![^>]*aria-labelledby)/gs",
          "message": "Form inputs must have labels or aria-label",
          "severity": "critical",
          "fix_guidance": "Add proper labeling for all form inputs"
        },
        
        "color_only_meaning": {
          "pattern": "/color:\\s*red(?!.*icon|.*text)/gs",
          "message": "Do not convey meaning through color alone",
          "severity": "medium",
          "fix_guidance": "Add icons, text, or other visual indicators alongside color"
        }
      }
    },
    
    "quality_gates": {
      "minimum_requirements": {
        "grade": "A",
        "score_threshold": 90,
        "critical_violations": 0,
        "high_violations": 2,
        "medium_violations": 5
      },
      
      "scoring_weights": {
        "critical": 20,
        "high": 10,
        "medium": 5,
        "low": 1
      },
      
      "category_requirements": {
        "accessibility": {
          "minimum_score": 95,
          "critical_violations": 0,
          "description": "Accessibility is non-negotiable"
        },
        "performance": {
          "minimum_score": 85,
          "size_budget_compliance": true,
          "description": "Performance budgets must be met"
        },
        "webflow": {
          "minimum_score": 90,
          "single_embed": true,
          "description": "Must work seamlessly in Webflow"
        }
      }
    },
    
    "testing_checklist": {
      "automated_checks": [
        "Component validation passes all critical checks",
        "Anti-pattern detection clean",
        "Size budget compliance verified",
        "ARIA attributes properly set",
        "Semantic HTML structure valid"
      ],
      
      "manual_verification": [
        "Keyboard navigation works completely",
        "Screen reader testing passed",
        "Mobile/touch interaction verified",
        "Visual contrast acceptable",
        "Motion preferences respected",
        "Focus management logical",
        "Error states handled gracefully"
      ],
      
      "cross_browser_testing": [
        "Chrome/Chromium (latest)",
        "Firefox (latest)",
        "Safari (latest)",
        "Edge (latest)",
        "Mobile Safari (iOS)",
        "Chrome Mobile (Android)"
      ],
      
      "webflow_specific": [
        "Works in Webflow Designer",
        "Publishes without errors",
        "Functions in collections",
        "Responsive behavior correct",
        "No IX2 conflicts",
        "Preview mode functional"
      ]
    },
    
    "optimization_guidelines": {
      "code_efficiency": [
        "Remove unused variables and functions",
        "Combine similar event handlers",
        "Use CSS for animations when possible",
        "Minimize DOM queries",
        "Cache frequently accessed elements"
      ],
      
      "accessibility_enhancement": [
        "Add comprehensive ARIA descriptions",
        "Implement roving tabindex where appropriate",
        "Provide multiple ways to accomplish tasks",
        "Test with actual assistive technology",
        "Consider cognitive accessibility needs"
      ],
      
      "performance_optimization": [
        "Use will-change sparingly",
        "Implement lazy loading for heavy content",
        "Debounce/throttle event handlers",
        "Use passive event listeners",
        "Minimize layout thrashing"
      ],
      
      "maintainability": [
        "Use clear, descriptive variable names",
        "Comment complex logic thoroughly",
        "Follow consistent code style",
        "Separate concerns logically",
        "Document public API methods"
      ]
    },
    
    "continuous_improvement": {
      "metrics_tracking": [
        "User satisfaction scores",
        "Task completion rates",
        "Error frequencies",
        "Performance benchmarks",
        "Accessibility compliance scores"
      ],
      
      "feedback_integration": [
        "User testing results",
        "Developer feedback",
        "Real-world usage patterns",
        "Support ticket analysis",
        "Community contributions"
      ],
      
      "evolution_triggers": [
        "New web standards adoption",
        "Browser API changes",
        "Accessibility guideline updates",
        "Performance best practice changes",
        "User behavior pattern shifts"
      ]
    }
  },
  
  "validation_functions": {
    "checkContrastRatios": {
      "description": "Validates color contrast ratios meet WCAG AA standards",
      "implementation": "Analyzes foreground/background color combinations",
      "threshold": "4.5:1 for normal text, 3:1 for large text"
    },
    
    "validateSizeBudget": {
      "description": "Ensures component size fits within capability level budget",
      "implementation": "Calculates compressed size and compares to tier limits",
      "enforcement": "Strict - no exceptions without tier upgrade"
    },
    
    "checkSemanticHTML": {
      "description": "Verifies proper use of semantic HTML5 elements",
      "implementation": "Scans for semantic tags in interactive components",
      "requirements": "At least one semantic element for interactive components"
    },
    
    "validateAccessibility": {
      "description": "Comprehensive accessibility compliance check",
      "implementation": "Checks ARIA, keyboard support, focus management",
      "standards": "WCAG 2.1 AA compliance required"
    }
  },
  
  "quality_reports": {
    "template": {
      "component_name": "string",
      "overall_grade": "A+ | A | B+ | B | C+ | C | F",
      "overall_score": "number (0-100)",
      "category_scores": {
        "structure": "number",
        "accessibility": "number", 
        "performance": "number",
        "webflow": "number"
      },
      "violations": [
        {
          "category": "string",
          "severity": "critical | high | medium | low",
          "rule": "string",
          "message": "string",
          "fix_guidance": "string"
        }
      ],
      "recommendations": ["string"],
      "passed_checks": ["string"],
      "metrics": {
        "size_kb": "number",
        "estimated_load_time": "string",
        "accessibility_score": "number"
      }
    }
  }
}
